{"version":3,"sources":["Calculator.js","reducer.js","App.js","index.js","action.js"],"names":["Calculator","state","operator_added","calculate","insertNumber","value","props","data","current_value","setCurrent","add","setState","percentage","finalValue","final","isNaN","eval","operator","parseInt","clearNumber","current_number","className","this","onClick","Component","mapStateToProps","connect","initialState","App","store","createStore","action","type","payload","ReactDOM","render","document","getElementById","stringNumber"],"mappings":"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","file":"static/js/main.1fd00924.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { add, final, setCurrent } from './action';\n\nclass Calculator extends Component {\n  state = {\n    operator_added: false,\n    calculate: false\n  };\n\n  insertNumber = value => {\n    if (!this.props.data.current_value && value === '0') {\n      return;\n    }\n    if (this.state.operator_added) {\n      this.props.setCurrent(value);\n      this.props.add(this.props.data.value + value);\n      this.setState({\n        operator_added: false,\n        calculate: true\n      });\n    }\n\n    if (!this.state.operator_added) {\n      this.props.add(this.props.data.value + value);\n      this.props.setCurrent(this.props.data.value + value);\n      this.setState({\n        calculate: true\n      });\n    }\n  };\n\n  percentage = () => {\n    const finalValue = this.props.data.final;\n    if (isNaN(finalValue) || this.state.operator_added) {\n      return;\n    }\n    if (finalValue === 0) {\n      this.props.final(this.props.data.current_value / 100);\n      this.props.add(this.props.data.current_value / 100);\n\n      this.props.setCurrent(this.props.data.current_value / 100);\n    } else {\n      this.props.add(eval(this.props.data.value) / 100);\n      this.props.final(eval(this.props.data.value) / 100);\n      this.props.setCurrent(eval(this.props.data.value) / 100);\n    }\n  };\n\n  operator = value => {\n    if (this.state.operator_added && value === '+') {\n      return;\n    }\n    if (this.state.operator_added && value === '/') {\n      return;\n    }\n    if (this.state.operator_added && value === '%') {\n      return;\n    }\n    if (this.state.operator_added && value === '*') {\n      return;\n    }\n    if (this.state.operator_added && value === '.') {\n      return;\n    }\n    if (this.state.operator_added && value === '-') {\n      return;\n    }\n\n    if (!this.props.data.current_value && value === '+') {\n      return;\n    }\n    if (!this.props.data.current_value && value === '/') {\n      return;\n    }\n    if (!this.props.data.current_value && value === '%') {\n      return;\n    }\n    if (!this.props.data.current_value && value === '*') {\n      return;\n    }\n\n    const finalValue = parseInt(this.props.data.current_value);\n\n    if (!this.state.calculate) {\n      this.props.final(finalValue);\n    }\n\n    if (this.state.calculate) {\n      this.props.final(this.props.data.final + finalValue);\n    }\n\n    this.props.add(this.props.data.value + value);\n    this.setState({\n      operator_added: true,\n      calculate: false\n    });\n  };\n\n  clearNumber = () => {\n    this.props.add('');\n    this.props.setCurrent('');\n    this.props.final(0);\n    this.setState({\n      current_number: '',\n      operator_added: false\n    });\n  };\n\n  calculate = () => {\n    if (!this.props.data.current_value) {\n      return;\n    }\n    if (!this.state.calculate) {\n      return;\n    }\n\n    this.setState({\n      operator_added: false,\n      calculate: false\n    });\n\n    this.props.add(eval(this.props.data.value));\n    this.props.final(eval(this.props.data.value));\n    this.props.setCurrent(eval(this.props.data.value));\n  };\n\n  render() {\n    return (\n      <div className=\"calc-wrapper\">\n        <p className=\"view-calculation\">{this.props.data.value}</p>\n        <div className=\"current-calculation\">\n          <p>{this.props.data.current_value && '='}</p>\n          <p>{this.props.data.current_value}</p>\n        </div>\n        <div className=\"numpad-wrapper\">\n          <div className=\"btn-clear\">\n            <button onClick={this.clearNumber}>CLEAR</button>\n            <button onClick={() => this.operator('*')}>x</button>\n          </div>\n          <div className=\"btn-main\">\n            <button onClick={() => this.insertNumber('1')}>1</button>\n            <button onClick={() => this.insertNumber('2')}>2</button>\n            <button onClick={() => this.insertNumber('3')}>3</button>\n            <button onClick={() => this.operator('+')} className=\"color-yellow\">\n              +\n            </button>\n            <button onClick={() => this.insertNumber('4')}>4</button>\n            <button onClick={() => this.insertNumber('5')}>5</button>\n            <button onClick={() => this.insertNumber('6')}>6</button>\n            <button className=\"color-yellow\" onClick={() => this.operator('-')}>\n              -\n            </button>\n            <button onClick={() => this.insertNumber('7')}>7</button>\n            <button onClick={() => this.insertNumber('8')}>8</button>\n            <button onClick={() => this.insertNumber('9')}>9</button>\n            <button onClick={this.percentage} className=\"color-yellow\">\n              %\n            </button>\n            <button onClick={() => this.operator('/')} className=\"color-yellow\">\n              /\n            </button>\n            <button onClick={() => this.insertNumber('0')}>0</button>\n            <button onClick={() => this.operator('.')} className=\"color-yellow\">\n              .\n            </button>\n            <button onClick={this.calculate} className=\"color-yellow\">\n              =\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    data: state\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { add, final, setCurrent }\n)(Calculator);\n","const initialState = {};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case 'SET_VIEW_NUMBER':\n      return {\n        ...state,\n        value: action.payload\n      };\n    case 'CURRENT_VALUE':\n      return {\n        ...state,\n        current_value: action.payload\n      };\n    case 'FINAL_VALUE':\n      return {\n        ...state,\n        final: action.payload\n      };\n    default:\n      return {\n        ...state,\n        value: '',\n        final: 0,\n        current_value: ''\n      };\n  }\n}\n","import React from 'react';\n\nimport Calculator from './Calculator';\nimport './App.scss';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Calculator />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport reducer from './reducer';\n\nimport App from './App';\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n","export function add(stringNumber) {\n  return {\n    type: 'SET_VIEW_NUMBER',\n    payload: stringNumber\n  };\n}\n\nexport function final(value) {\n  return {\n    type: 'FINAL_VALUE',\n    payload: value\n  };\n}\n\nexport function setCurrent(value) {\n  return {\n    type: 'CURRENT_VALUE',\n    payload: value\n  };\n}\n"],"sourceRoot":""}